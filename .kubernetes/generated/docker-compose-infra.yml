version: '3'
networks:
  nestjs-mod-sso-network:
    driver: 'bridge'
services:
  nestjs-mod-sso-postgre-sql:
    image: 'bitnami/postgresql:15.5.0'
    container_name: 'nestjs-mod-sso-postgre-sql'
    networks:
      - 'nestjs-mod-sso-network'
    ports:
      - '5432:5432'
    healthcheck:
      test:
        - 'CMD-SHELL'
        - 'pg_isready -U postgres'
      interval: '5s'
      timeout: '5s'
      retries: 5
    tty: true
    restart: 'always'
    environment:
      POSTGRESQL_USERNAME: 'postgres'
      POSTGRESQL_PASSWORD: 'postgres_password'
      POSTGRESQL_DATABASE: 'postgres'
    volumes:
      - 'nestjs-mod-sso-postgre-sql-volume:/bitnami/postgresql'
  nestjs-mod-sso-postgre-sql-migrations:
    image: 'ghcr.io/nestjs-mod/nestjs-mod-sso-migrations:0.0.6'
    container_name: 'nestjs-mod-sso-postgre-sql-migrations'
    networks:
      - 'nestjs-mod-sso-network'
    tty: true
    environment:
      NX_SKIP_NX_CACHE: 'true'
      SERVER_ROOT_DATABASE_URL: 'postgres://postgres:postgres_password@nestjs-mod-sso-postgre-sql:5432/postgres?schema=public'
    depends_on:
      nestjs-mod-sso-postgre-sql:
        condition: 'service_healthy'
    working_dir: '/usr/src/app'
    volumes:
      - './../../apps:/usr/src/app/apps'
      - './../../libs:/usr/src/app/libs'
volumes:
  nestjs-mod-sso-postgre-sql-volume:
    external: true
    name: 'nestjs-mod-sso-postgre-sql-volume'
